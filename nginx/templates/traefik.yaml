kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: traefik-ingress-controller
  namespace: ingress
  labels:
    name: traefik-ingress-lb
spec:
  replicas: 1
  selector:
    matchLabels:
      name: traefik-ingress-lb
  template:
    metadata:
      labels:
        name: traefik-ingress-lb
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: name
                operator: In
                values:
                - traefik-ingress-lb
            topologyKey: "kubernetes.io/hostname"
      serviceAccountName: traefik-ingress-controller
      securityContext:
        runAsNonRoot: true
      containers:
      - image: traefik:v1.7.4-alpine
        name: traefik-ingress-lb
        securityContext:
          runAsUser: 1000
        ports:
        - name: traefik-mgmt
          containerPort: 8080
        - name: traefik-ingress
          containerPort: 8000
        args:
        - --api
        - --ping
        - --ping.entrypoint=http
        - --metrics
        - --metrics.prometheus
        - --metrics.prometheus.entrypoint=http
        - --entryPoints=Name:http Address::8000
        - --accessLog
        - --accessLog.format="json"
        - --traefikLog.format="json"
        - --kubernetes.namespaces=ingress,devnaveen
        livenessProbe:
          httpGet:
            path: ping
            port: 8000
            scheme: HTTP
        readinessProbe:
          httpGet:
            path: ping
            port: 8000
            scheme: HTTP
---
kind: Service
apiVersion: v1
metadata:
  name: traefik-management
  namespace: ingress
spec:
  selector:
    name: traefik-ingress-lb
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
kind: Service
apiVersion: v1
metadata:
  name: traefik-ingress-service
  namespace: ingress
spec:
  selector:
    name: traefik-ingress-lb
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
      nodePort: 30000
  type: NodePort
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-external-access
  namespace: ingress
spec:
  ingress:
  - ports:
    # ingress traffic
    - port: 8000
      protocol: TCP
    # dashboard
    - port: 8080
      protocol: TCP
  podSelector:
    matchLabels:
      name: traefik-ingress-lb
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: traefik-management
  namespace: ingress
  annotations:
     traefik.frontend.rule.type: PathPrefixStrip
spec:
  rules:
  - http:
      paths:
      - backend:
          serviceName: traefik-management
          servicePort: 8080
        path: /traefik
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: default
  namespace: ingress
spec:
  backend:
    serviceName: traefik-ingress-service
    servicePort: 8000
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-ingress-controller
  namespace: ingress
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: traefik-ingress-controller
  namespace: devnaveen
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - services
      - endpoints
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: traefik-ingress-controller
  namespace: ingress
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - services
      - endpoints
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: traefik-ingress-controller
  namespace: ingress
subjects:
- namespace: ingress
  kind: ServiceAccount
  name: traefik-ingress-controller
roleRef:
  kind: Role
  name: traefik-ingress-controller
  apiGroup: rbac.authorization.k8s.io
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: traefik-ingress-controller
  namespace: devnaveen
subjects:
- namespace: ingress
  kind: ServiceAccount
  name: traefik-ingress-controller
roleRef:
  kind: Role
  name: traefik-ingress-controller
  apiGroup: rbac.authorization.k8s.io
---

